import Head from 'next/head'
import HeaderOnly from 'layouts/header-only.js'
import styles from 'styles/pages/Home.module.scss'
import CarouselContainer from "components/common/carousel/carouselContainer";
import Accordion from "components/common/accordion";
import Categories from "components/homepage/categories";
import Button from "components/common/button";
import { useRouter } from "next/router";
import axios from 'axios';
import { Endpoints } from 'utils/endpoints'
import { useEffect, useState } from 'react'
import { getUserProfile } from 'shared/users';
import cookie from "cookie";

export default function MainPages({ pageInfo, tags=[] }) {

    console.log('pageInfo', pageInfo)
    const [sections, setSections] = useState()
    useEffect(() => {
        let sectionsTmp = [];
        pageInfo.sections.map((sec) => {
            let optTemp = [];
            sec.posts.map((post) => {
                optTemp.push({
                    title: post.title,
                    subTitle: post.description,
                    image: post.coverImage?.url,
                    route: '/post/'+post._id,
                    bestSeller: post.bestSeller ? true : false,
                    contentType: post.contentType
                })
            })
            let tmp = {
                title: sec.title,
                options: optTemp,
                slidesPerView: (sec.contentType == 'magazine' || sec.contentType == 'article') ? 6 : 4,
                radius: true,
                page: '/post/'+sec._id,
                type: sec.contentType || 'best',
            }
            sectionsTmp.push(tmp);

        })
        setSections([...sectionsTmp])
    }, [])

    console.log('sec', sections)

    return (
        <div>
            <Head>
                <title>دیجی نشر</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className='container'>

                <Categories tags={tags} />

                {sections?.map((carousel) => (
                    <CarouselContainer
                        key={carousel.title}
                        title={carousel.title}
                        carouselOptions={
                            {
                                items: carousel.options,
                                swiperOptions: { slidesPerView: carousel.slidesPerView },
                                radius: carousel.radius,
                                type: carousel.type,
                                // image: carousel.image,
                                page: carousel.page,
                            }
                        }
                    />
                ))}

                <div className={styles.showMore}>
                    <Button classes={styles.showMoreBtn}>
                        موارد بیشتر
                    </Button>
                </div>


                <div className={styles.accordionContainer}>
                    <Accordion />
                </div>
            </div>
        </div>
    )
}

export const getStaticPaths = async (context) => {
    console.log('connn',context.req)
    const pagesInfo = await axios.get(`${Endpoints.baseUrl}/pages`)
    const data = pagesInfo.data.data.pages;
    const paths = data.map(page => {
        return {
            params: { pageType: page.pageType.toString() }

        }
    })
    return {
        paths,
        fallback: false
    }
}

export async function getStaticProps(context) {
    console.log('context', context);

    // const { accessToken } = cookie.parse(context.req.headers.cookie ?? '')

    // if (!accessToken) {
    //     return {
    //         redirect: {
    //             destination: '/',
    //             permanent: false,
    //         },
    //     }
    // }

    try {
        // const { data: { data: { me } } } = await getUserProfile(accessToken)

        console.log('context', context.params);
        const pageInfo = await axios.get(`${Endpoints.baseUrl}/pages/${context.params.pageType}`)
        // const tags = await axios.get(`${Endpoints.baseUrl}/post/tags`, {
        //     headers: {
        //         authorization: 'accessToken'
        //     }
        // })

        return {
            props: {
                pageInfo: pageInfo.data.data.page,
                // tags: tags.data.data.tags
            }, // will be passed to the page component as props

        };
    }
    catch (e) {

    }

}